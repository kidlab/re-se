#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3603
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FTree.Model
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="FTree")]
	public partial class FTreeDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertFAMILYMEMBER_TEST(FAMILYMEMBER_TEST instance);
    partial void UpdateFAMILYMEMBER_TEST(FAMILYMEMBER_TEST instance);
    partial void DeleteFAMILYMEMBER_TEST(FAMILYMEMBER_TEST instance);
    #endregion
		
		public FTreeDataContext() : 
				base(global::FTree.Model.Properties.Settings.Default.FTreeConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public FTreeDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FTreeDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FTreeDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FTreeDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<FAMILYMEMBER_TEST> FAMILYMEMBER_TESTs
		{
			get
			{
				return this.GetTable<FAMILYMEMBER_TEST>();
			}
		}
	}
	
	[Table(Name="dbo.FAMILYMEMBER_TEST")]
	public partial class FAMILYMEMBER_TEST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private byte _Gender;
		
		private string _HomeTown;
		
		private string _Address;
		
		private System.Nullable<System.DateTime> _BirthDay;
		
		private System.Nullable<System.DateTime> _DayJoinFamily;
		
		private string _Career;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnGenderChanging(byte value);
    partial void OnGenderChanged();
    partial void OnHomeTownChanging(string value);
    partial void OnHomeTownChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnBirthDayChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthDayChanged();
    partial void OnDayJoinFamilyChanging(System.Nullable<System.DateTime> value);
    partial void OnDayJoinFamilyChanged();
    partial void OnCareerChanging(string value);
    partial void OnCareerChanged();
    #endregion
		
		public FAMILYMEMBER_TEST()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_FirstName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[Column(Storage="_LastName", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[Column(Storage="_Gender", DbType="TinyInt NOT NULL")]
		public byte Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[Column(Storage="_HomeTown", DbType="NVarChar(50)")]
		public string HomeTown
		{
			get
			{
				return this._HomeTown;
			}
			set
			{
				if ((this._HomeTown != value))
				{
					this.OnHomeTownChanging(value);
					this.SendPropertyChanging();
					this._HomeTown = value;
					this.SendPropertyChanged("HomeTown");
					this.OnHomeTownChanged();
				}
			}
		}
		
		[Column(Storage="_Address", DbType="NVarChar(50)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[Column(Storage="_BirthDay", DbType="DateTime")]
		public System.Nullable<System.DateTime> BirthDay
		{
			get
			{
				return this._BirthDay;
			}
			set
			{
				if ((this._BirthDay != value))
				{
					this.OnBirthDayChanging(value);
					this.SendPropertyChanging();
					this._BirthDay = value;
					this.SendPropertyChanged("BirthDay");
					this.OnBirthDayChanged();
				}
			}
		}
		
		[Column(Storage="_DayJoinFamily", DbType="DateTime")]
		public System.Nullable<System.DateTime> DayJoinFamily
		{
			get
			{
				return this._DayJoinFamily;
			}
			set
			{
				if ((this._DayJoinFamily != value))
				{
					this.OnDayJoinFamilyChanging(value);
					this.SendPropertyChanging();
					this._DayJoinFamily = value;
					this.SendPropertyChanged("DayJoinFamily");
					this.OnDayJoinFamilyChanged();
				}
			}
		}
		
		[Column(Storage="_Career", DbType="NVarChar(50)")]
		public string Career
		{
			get
			{
				return this._Career;
			}
			set
			{
				if ((this._Career != value))
				{
					this.OnCareerChanging(value);
					this.SendPropertyChanging();
					this._Career = value;
					this.SendPropertyChanged("Career");
					this.OnCareerChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
